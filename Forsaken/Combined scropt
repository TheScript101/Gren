-- Combined Script Loader

-- Auto Block v4
pcall(function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/skibidi399/Auto-block-script/refs/heads/main/FINAL%20AUTO%20BLOCK"))()
end)

-- Camlock/Aimlock
pcall(function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Cam-Lock-23358"))()
end)

-- Executor Script
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui")
gui.Parent = CoreGui
gui.ResetOnSpawn = false

local toggle = Instance.new("TextButton")
toggle.Size = UDim2.new(0, 160, 0, 40)
toggle.Position = UDim2.new(0, 20, 0.5, -20)
toggle.Text = "Movement Anim: OFF"
toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BorderSizePixel = 0
toggle.Draggable = true
toggle.Active = true
toggle.Parent = gui

-- Create animation assets
local function createAnim(id)
	local anim = Instance.new("Animation")
	anim.AnimationId = "rbxassetid://" .. id
	return anim
end

local idleAnim = createAnim("134624270247120")
local walkAnim = createAnim("132377038617766")
local runAnim  = createAnim("115946474977409")

local connection, idleTrack, walkTrack, runTrack
local playing = false

-- Animation control
local function stopOtherTracks(humanoid)
	for _, track in humanoid:GetPlayingAnimationTracks() do
		if track ~= idleTrack and track ~= walkTrack and track ~= runTrack then
			track:Stop()
		end
	end
end

-- Core logic handler
local function applyMovementAnimations(character)
	local humanoid = character:WaitForChild("Humanoid")
	local rootPart = character:WaitForChild("HumanoidRootPart")

	idleTrack = humanoid:LoadAnimation(idleAnim)
	walkTrack = humanoid:LoadAnimation(walkAnim)
	runTrack  = humanoid:LoadAnimation(runAnim)

	for _, track in {idleTrack, walkTrack, runTrack} do
		track.Looped = true
		track.Priority = Enum.AnimationPriority.Action
	end

	connection = RunService.RenderStepped:Connect(function()
		if not playing or not character or not character.Parent then return end
		local velocity = (rootPart.Velocity * Vector3.new(1, 0, 1)).Magnitude

		stopOtherTracks(humanoid)

		if velocity < 1 then
			if not idleTrack.IsPlaying then idleTrack:Play() end
			walkTrack:Stop()
			runTrack:Stop()
		elseif velocity <= 23 then
			if not walkTrack.IsPlaying then walkTrack:Play() end
			idleTrack:Stop()
			runTrack:Stop()
		else
			if not runTrack.IsPlaying then runTrack:Play() end
			idleTrack:Stop()
			walkTrack:Stop()
		end
	end)
end

-- On toggle click
toggle.MouseButton1Click:Connect(function()
	playing = not playing
	toggle.Text = playing and "Movement Anim: ON" or "Movement Anim: OFF"

	if not playing then
		if connection then connection:Disconnect() end
		for _, t in {idleTrack, walkTrack, runTrack} do
			if t then t:Stop() end
		end
	else
		local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
		applyMovementAnimations(char)
	end
end)

-- Handle respawn / reset
LocalPlayer.CharacterAdded:Connect(function(char)
	if connection then connection:Disconnect() end
	if playing then
		playing = false
		toggle.Text = "Movement Anim: OFF"
	end
end)

--------------------------------------------------------------------------------------------------------------------
-- Auto Dash on Animation Detection (with configurable delays & dash distance per animation)
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Global Settings
local defaultDashDistance = 6
local dashTime = 0.30
local dashDelay = 0.56
local speedBoostDelay = 1
local speedBoostTime = 2
local speedBoostValue = 34
local restoreSpeed = 28

-- Dash animations (HP-based)
local dashAnimOver50 = "rbxassetid://136252471123500"
local dashAnimUnder50 = "rbxassetid://115946474977409"

-- Animation IDs with per-animation settings
local targetAnims = {
    -- Shedletsky
    ["rbxassetid://116618003477002"] = { dashDelay = dashDelay, speedBoostDelay = speedBoostDelay, dashDistance = 6 },
    ["rbxassetid://121781457295101"] = { dashDelay = 0.25, speedBoostDelay = 1, dashDistance = 7.5 },

    -- Two Time
    ["rbxassetid://86545133269813"] = { dashDelay = 0.05, speedBoostDelay = 1, dashDistance = 6 },

    -- Noob
    ["rbxassetid://124033675853489"] = { dashDelay = 0.15, speedBoostDelay = 1, dashDistance = 7.5 },
    ["rbxassetid://96771054624545"] = { dashDelay = 0.15, speedBoostDelay = 1, dashDistance = 7.5 },
}

-- Get animation config
local function getAnimConfig(animId)
    local cfg = targetAnims[animId]
    if cfg then
        return {
            dashDelay = cfg.dashDelay or dashDelay,
            speedBoostDelay = cfg.speedBoostDelay or speedBoostDelay,
            dashDistance = cfg.dashDistance or defaultDashDistance
        }
    end
    return nil
end

-- Dash function (adds HP animation alongside trigger anim)
local function dash(distance)
    local char = LocalPlayer.Character
    if not char or not char:FindFirstChild("HumanoidRootPart") then return end

    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    -- Choose dash animation based on HP
    local hpRatio = humanoid.Health / humanoid.MaxHealth
    local dashAnimId = hpRatio > 0.5 and dashAnimOver50 or dashAnimUnder50
    local anim = Instance.new("Animation")
    anim.AnimationId = dashAnimId
    local dashTrack = humanoid:LoadAnimation(anim)

    -- Override other animations and play faster
    dashTrack.Priority = Enum.AnimationPriority.Action4 -- Highest priority so it overrides everything
    dashTrack:Play()
    dashTrack:AdjustSpeed(2)

    -- Apply dash velocity
    local root = char.HumanoidRootPart
    local direction = root.CFrame.LookVector
    local bv = Instance.new("BodyVelocity")
    bv.Velocity = direction * distance * 10
    bv.MaxForce = Vector3.new(1e5, 0, 1e5)
    bv.Parent = root

    task.delay(dashTime, function()
        bv:Destroy()
        dashTrack:Stop() -- Stop HP dash anim, allowing other anims to resume
    end)
end

-- Speed boost function
local function applySpeedBoost()
    local char = LocalPlayer.Character
    if not char then return end

    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if not humanoid then return end

    local startTime = tick()
    while tick() - startTime < speedBoostTime do
        humanoid.WalkSpeed = speedBoostValue
        task.wait(0.01)
    end

    humanoid.WalkSpeed = restoreSpeed
end

-- Detect animation playing
local function setupAnimDetection(char)
    local humanoid = char:WaitForChild("Humanoid")

    humanoid.AnimationPlayed:Connect(function(track)
        local animId = track.Animation.AnimationId
        local cfg = getAnimConfig(animId)
        if cfg then
            -- Keep trigger anim playing, add dash + HP anim after delay
            task.delay(cfg.dashDelay, function()
                dash(cfg.dashDistance)
                task.delay(cfg.speedBoostDelay, function()
                    applySpeedBoost()
                end)
            end)
        end
    end)
end

-- Initial setup
if LocalPlayer.Character then
    setupAnimDetection(LocalPlayer.Character)
end

-- Reconnect on respawn
LocalPlayer.CharacterAdded:Connect(setupAnimDetection)
--------------------------------------------------------------------------------------------------------------------


-- Forsaken ESP Fix
pcall(function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Forsaken-esp-fix-29432"))()
end)
